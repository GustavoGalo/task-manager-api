// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  name     String
  email    String @unique
  password String
  username String

  confirmationCode          String?
  confirmationCodeExpiresAt DateTime?

  id        String   @id
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects           Project[]
  projectContributor ProjectContributor[]
}

model ProjectContributor {
  User      User    @relation(fields: [userId], references: [id])
  userId    String
  Project   Project @relation(fields: [projectId], references: [id])
  projectId String

  @@id([userId, projectId])
}

model Project {
  name        String
  description String

  id        String   @id
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  column ProjectColumn[]
  User   User            @relation(fields: [userId], references: [id])
  userId String

  projectContributor ProjectContributor[]
}

model ProjectColumn {
  name String

  id        String   @id
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Project   Project @relation(fields: [projectId], references: [id])
  projectId String

  tasks Task[]
}

model Task {
  title       String
  description String

  id        String   @id
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ProjectColumn   ProjectColumn @relation(fields: [projectColumnId], references: [id])
  projectColumnId String
}
